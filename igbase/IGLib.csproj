<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<!--
		Previous targets:
		To Do - future targets (Move everything containing IFormatter and BinaryFormatter to IGLibExt or something else):
		<GenerateAssemblyInfo>false</GenerateAssemblyInfo>
		Current targets:
		<TargetFrameworks>net9.0;net8.0;net48;netstandard2.0</TargetFrameworks>
		-->
		<TargetFrameworks>net9.0;net8.0;net48;netstandard2.0</TargetFrameworks>
		<OutputType>Library</OutputType>
		<ImplicitUsings>disable</ImplicitUsings>
		<LangVersion>latest</LangVersion>
		<!--
		<OutputPath>../../output/bin</OutputPath>
		-->
	</PropertyGroup>

	<PropertyGroup>
		<!-- Attributes previously in AsemblyInfo.cs: -->
		<AssemblyName>IGLib</AssemblyName>
		<PackageId>IGLib</PackageId>
		<Version>1.9.1.2</Version>
		<AssemblyVersion>1.9.1.2</AssemblyVersion>
		<FileVersion>1.9.1.2</FileVersion>
		<RootNamespace>IG.Lib</RootNamespace>
		<Authors>Igor Grešovnik et al.</Authors>
		<Company>Igor Grešovnik</Company>
		<Product>Investigative Generic Library - IGLib</Product>
		<NeutralLanguage>en</NeutralLanguage>
		<Description>Basic IGLib library.</Description>
		<Copyright>Copyright © Igor Grešovnik (2008 - present).</Copyright>
		<PackageLicenseUrl></PackageLicenseUrl>
		<PackageProjectUrl></PackageProjectUrl>
		<PackageIconUrl></PackageIconUrl>
		<RepositoryUrl></RepositoryUrl>
		<RepositoryType>Git</RepositoryType>
		<PackageTags>Tags</PackageTags>
		<PackageReleaseNotes>Release</PackageReleaseNotes>

		<PackageLicenseExpression>IGLib Binary Redistributable Licence</PackageLicenseExpression>
		<PackageLicenseUrl>http://www2.arnes.si/%7Eljc3m2/igor/software/IGLibShellApp/License_IGShel.html</PackageLicenseUrl>

	</PropertyGroup>

	<PropertyGroup>
		<!--
		<AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
    Remark: Without setting AppendRuntimeIdentifierToOutputPath to false, net5.0 would e.g. set bin\Debug\net5.0-windows
    as output path. To prevent this, set:
    <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
    Remark: the following would also exclude target framework from output path, but this is not always a good idea for
    multi-targeted projects (it is probably noy a good idea) because output targets would overwrite each other.
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <OutputPath>bin/</OutputPath>
    Remark: default output path is simply (if this is OK it does not need to be stated): 
    <OutputPath>bin/</OutputPath>
    For IGLib, default path should be the the common output directory:
    <OutputPath>../../output/bin</OutputPath>
    -->
	</PropertyGroup>

	<ItemGroup>
		<ProjectReference Include="..\..\IGLibCore\src\IGLib.Core\IGLib.Core.csproj" />
		<ProjectReference Include="..\..\iglibexternal\IGLibExternal\Jint\Jint\Jint.csproj" />
		<ProjectReference Include="..\..\iglibexternal\IGLibExternal\mathnet-numerics\src\Numerics\Numerics.csproj" />
		<ProjectReference Include="..\00_initmodules\InitIGLibModules\InitIGLibModules.csproj" />
		<!--
		<ProjectReference Include="..\modules\IGLibCore\src\IGLibCore.csproj" />
		-->
	</ItemGroup>

	<ItemGroup>
		<Reference Include="System.Web.Extensions">
			<HintPath>C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5\System.Web.Extensions.dll</HintPath>
		</Reference>
	</ItemGroup>


	<!--
	<ItemGroup Condition=" '$(TargetFramework)' == 'net48'|'$(TargetFramework)' == 'net6.0' ">
	</ItemGroup>
	-->

	<ItemGroup>
		<Content Remove="00_net48\**" />
		<Compile Remove="00_net48\**" />
		<EmbeddedResource Remove="00_net48\**" />
		<None Remove="00_net48\**" />
	</ItemGroup>

	<!--
	-->
	
	<ItemGroup>
	  <PackageReference Include="System.Configuration.ConfigurationManager" Version="6.0.0" />
	  <PackageReference Include="System.Reflection.Emit" Version="4.7.0" />
	  <PackageReference Include="System.Reflection.Emit.Lightweight" Version="4.7.0" />
	  <PackageReference Include="System.Threading.AccessControl" Version="6.0.0" />
	  <PackageReference Include="System.CodeDom" Version="6.0.0" />
	</ItemGroup>

	<ItemGroup Condition=" '$(TargetFramework)' != 'net48' ">
		<!--
		If we do not target the legacy .NET Framework, we need to add the following package reference
		in order to compensate for the lack of System.Web.Script.Serialization namespace in .NET Core.
		The following sources were also corrected:
		* In /igbase/data/serialization/json/JsonSerialization/:
		* JsonExtensions.cs
		* SerializerBase.cs
		-->
		<PackageReference Include="System.Text.Json" Version="9.0.0" />
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'net8.0' Or '$(TargetFramework)' == 'net9.0'">
		<!-- Since .NET 8.0 or higher, the BinaryFormatter (and IFormatter) is not available, 
		and we need to add the package below due to UtilSystem.cs: -->
		<PackageReference Include="System.Runtime.Serialization.Formatters" Version="9.0.0" />
	</ItemGroup>



	<!--
	<ItemGroup>
	<Compile Remove="FromIGLibBase\**" />
	<EmbeddedResource Remove="FromIGLibBase\**" />
	<None Remove="FromIGLibBase\**" />
	</ItemGroup>
	<ItemGroup>
	<Folder Include="ToArrange\TypeConversion\" />
	</ItemGroup>
    -->

</Project>


